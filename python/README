
Code structure:

    ./mangadap          - Top-level directory

        __init__        - Announce package

        ./survey        - Survey-level utilities.  Include things that
                          only someone runnning the pipeline at Utah
                          will need.

            __init__    - Announce package
            util        - Survey-level utilities
            rundap      - Survey-level wrapper used to prepare the
                          directory stucture, generate the DAP analysis
                          plans, generate scripts, and submit those
                          scripts to the cluster using pbs.

        ./util          - General utilities, used both at user- and
                          survey-level

            __init__    - Announce package
            except      - Exception utilities
            parser      - Utilities used to parse input

            fileio
            block_logic

            ...

            TEMPORARY!!: merge with mangadrp/sdss_python_module
            yanny       - Yanny reader
            generalUtils - SDSS maskbits reader

        drpfile         - Container class for DRP produced output files
                          (for now only used with DAP)

        mangampl        - Definition of MPLs, used to set versioning of
                          DRP, IDLUTILS, etc (differentiate between
                          user- and survey-level only performance?)

        dapplan         - Used to generate the analysis/execution plans
        dapfile         - Container class for DAP output files
                          (reading/writing/manipulating)
        daplog          - Container class for automatic
                          logging/record-keeping of procedures
        qaplot          - Class used to generate QA plots

        drpcomplete     - Searches and collates data on completed DRP
                          files on disk (can be both a user- and
                          survey-level utility)

        tpl_library     - Class used to read/manipulate the template
                          libraries; will have an associated DRP file
                          and/or spectral-index system

        dapproc         - Main container class for DAP processing steps

        ./contrib       - To hold contributed code
            __init__    - Announce package

        ./proc          - To hold main analysis code
            __init__    - Announce package
        
            prep
            bin
            stellar-cont
            emission-line
            full-spectral-fit
            spectral-index
            ...

------------------------------------------------------------------------

in ../bin

    Need a python script that:
        - executes dapproc steps given a plan and drpfile
        - produces the QA plots for each resulting dapfile

    This script must be able to be called on the command-line so that it
    can be submitted to compute nodes at Utah.  Can also be a user-level
    script.



------------------------------------------------------------------------
PATH STRUCTURE!

    drppath
    dappath
    dapsrc


